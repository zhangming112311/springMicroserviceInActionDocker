version: '2.1'
services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB:       "ostock_dev"
    volumes:
        - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
        - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  configserver:
    image: configserver:latest
    ports:
       - "8071:8071"
    environment:
      ENCRYPT_KEY: ${ENCRYPT_KEY} #"IMSYMMETRIC"
    networks:
      backend:
        aliases:
          - "configserver"
  licensingservice:
    image: licensing-service:latest
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY:       ${ENCRYPT_KEY}
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      - "8180:8080"
    networks:
      - backend

  keycloak:
    image: jboss/keycloak
    restart: always
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
    - "8080:8080"
    networks:
      backend:
        aliases:
        - "keycloak"
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
    - 2181:2181
    networks:
      backend:
        aliases:
        - "zookeeper"
#docker pull bitnami/kafka:3.1.0-debian-10-r31
#docker pull wurstmeister/kafka:2.13-2.8.1
#docker run --name zmkfk -p 9092:9092 -v /var/run/docker.sock:/var/run/docker.sock -e KAFKA_ADVERTISED_PORT=9092 -e KAFKA_ZOOKEEPER_CONNECT=182.61.45.76:2181:2181  -e KAFKA_ADVERTISED_HOST_NAME=kafka -e KAFKA_ADVERTISED_PORT=9092 -e KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1 -d  wurstmeister/kafka:latest
  kafkaserver:
    image: wurstmeister/kafka:latest
    ports:
    - 9092:9092
  environment:
  - KAFKA_ADVERTISED_HOST_NAME=kafka
  - KAFKA_ADVERTISED_PORT=9092
  - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1
  volumes:
  - "/var/run/docker.sock:/var/run/docker.sock"
  depends_on:
  - zookeeper
  networks:
    backend:
      aliases:
      - "kafka"
  redisserver:
    image: redis:alpine
    ports:
    - 6379:6379
    networks:
      backend:
        aliases:
        - "redis"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: elasticsearch
    volumes:
    - /home/esdata:/usr/share/elasticsearch/data
    ports:
    - 9300:9300
    - 9200:9200
#docker run --name zmes -v /home/esdata:/usr/share/elasticsearch/data -p 9200:9200 -p 9300:9300 -e ES_JAVA_OPTS="-Xms356m -Xmx356m" -e "discovery.type=single-node" -d  docker.elastic.co/elasticsearch/elasticsearch:7.7.0
  kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9300"
    ports:
    - 5601:5601
#docker run --name zmkibana -p 5601:5601 -e ELASTICSEARCH_URL=http://zmes:9300 -d docker.elastic.co/kibana/kibana:7.7.0
  logstash:
    image: docker.elastic.co/logstash/logstash:7.7.0
    container_name: logstash
    command:
      logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
    - ./config:/etc/logstash/conf.d.
    ports:
    - "5000:5000"
#docker run --name logstash -p 5000:5000 -e ELASTICSEARCH_URL=http://zmes:9300 -e JVM_OPTIONS="-Xms356m -Xmx356m" -d docker.elastic.co/logstash/logstash:7.7.0

#    NOTE If you see an error 137 exit code with  <container_name> container on
#your console while executing the  docker-compose command, visit the follow-
#ing link to increase the memory for Docker: https://www.petefreitag.com/
#item/848.cfm

networks:
  backend:
    driver: bridge
    
# docker pull mysql:8.0.28-oracle
# docker run --name zmmysql -v /宿主目录:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=zm474577048 -d mysql:8.0.28-oracle 
# docker exec -it a773e5260704 /bin/bash
#create user 'zhangming' identified with mysql_native_password by 'zm@474577048';
#grant all privileges on *.* to 'zhangming';
#flush privileges;
#connect to local MySQL server through socket  /var/lib/mysql/mysql.sock     mysql -h 127.0.0.1 -P 3306 -u root -p

#mvn clean package dockerfile:build && docker-compose -f docker/docker-compose.yml up